#include "fw.hpp"
#include "fw_types.hpp"
#include "fw_arrayprimitivetype.hpp"

using namespace Rice;

Enum<COLLADAFW::ClassId> rb_cCFWClassId;
Enum<COLLADAFW::PhysicalDimension> rb_cFWPhysicalDimension;

Data_Type<COLLADAFW::ArrayPrimitiveType<unsigned int>> rb_cCFWUIntValuesArray;
Data_Type<COLLADAFW::ArrayPrimitiveType<int>> rb_cCFWIntValuesArray;
Data_Type<COLLADAFW::ArrayPrimitiveType<size_t>> rb_cCFWSizeTValuesArray;
Data_Type<COLLADAFW::ArrayPrimitiveType<unsigned long long>> rb_cCFWULongLongValuesArray;
Data_Type<COLLADAFW::ArrayPrimitiveType<long long>> rb_cCFWLongLongValuesArray;
Data_Type<COLLADAFW::ArrayPrimitiveType<float>> rb_cCFWFloatArray;
Data_Type<COLLADAFW::ArrayPrimitiveType<double>> rb_cCFWDoubleArray;
Data_Type<COLLADAFW::ArrayPrimitiveType<COLLADAFW::PhysicalDimension>> rb_cCFWPhysicalDimensionArray;

void static rb_define_CFWTypesArrays()
{
	rb_createCFWArrayPrimitiveTypeClass<unsigned int>(rb_cCFWUIntValuesArray);
	rb_createCFWArrayPrimitiveTypeClass<int>(rb_cCFWIntValuesArray);
	rb_createCFWArrayPrimitiveTypeClass<size_t>(rb_cCFWSizeTValuesArray);
	rb_createCFWArrayPrimitiveTypeClass<unsigned long long>(rb_cCFWULongLongValuesArray);
	rb_createCFWArrayPrimitiveTypeClass<long long>(rb_cCFWLongLongValuesArray);
	rb_createCFWArrayPrimitiveTypeClass<float>(rb_cCFWFloatArray);
	rb_createCFWArrayPrimitiveTypeClass<double>(rb_cCFWDoubleArray);
	rb_createCFWArrayPrimitiveTypeClass<COLLADAFW::PhysicalDimension>(rb_cCFWPhysicalDimensionArray);
}

void static rb_define_CFWTypesEnums()
{
	rb_cFWPhysicalDimension = define_enum<COLLADAFW::PhysicalDimension>("PhysicalDimension", rb_cCFW);
	rb_cFWPhysicalDimension.define_value("PHYSICAL_DIMENSION_UNKNOWN", COLLADAFW::PHYSICAL_DIMENSION_UNKNOWN);
	rb_cFWPhysicalDimension.define_value("PHYSICAL_DIMENSION_TIME", COLLADAFW::PHYSICAL_DIMENSION_TIME);
	rb_cFWPhysicalDimension.define_value("PHYSICAL_DIMENSION_LENGTH", COLLADAFW::PHYSICAL_DIMENSION_LENGTH);
	rb_cFWPhysicalDimension.define_value("PHYSICAL_DIMENSION_ANGLE", COLLADAFW::PHYSICAL_DIMENSION_ANGLE);
	rb_cFWPhysicalDimension.define_value("PHYSICAL_DIMENSION_COLOR", COLLADAFW::PHYSICAL_DIMENSION_COLOR);
	rb_cFWPhysicalDimension.define_value("PHYSICAL_DIMENSION_NUMBER", COLLADAFW::PHYSICAL_DIMENSION_NUMBER);
	rb_cCFWClassId = define_enum<COLLADAFW::ClassId>("ClassId", rb_cCFW);
	rb_cCFWClassId.define_value("NO_TYPE", COLLADAFW::COLLADA_TYPE::NO_TYPE);
	rb_cCFWClassId.define_value("ANY", COLLADAFW::COLLADA_TYPE::ANY);
	rb_cCFWClassId.define_value("INPUTGLOBAL", COLLADAFW::COLLADA_TYPE::INPUTGLOBAL);
	rb_cCFWClassId.define_value("INPUTLOCAL", COLLADAFW::COLLADA_TYPE::INPUTLOCAL);
	rb_cCFWClassId.define_value("INPUTLOCALOFFSET", COLLADAFW::COLLADA_TYPE::INPUTLOCALOFFSET);
	rb_cCFWClassId.define_value("INSTANCEWITHEXTRA", COLLADAFW::COLLADA_TYPE::INSTANCEWITHEXTRA);
	rb_cCFWClassId.define_value("TARGETABLEFLOAT", COLLADAFW::COLLADA_TYPE::TARGETABLEFLOAT);
	rb_cCFWClassId.define_value("TARGETABLEFLOAT3", COLLADAFW::COLLADA_TYPE::TARGETABLEFLOAT3);
	rb_cCFWClassId.define_value("FX_SURFACE_FORMAT_HINT_COMMON", COLLADAFW::COLLADA_TYPE::FX_SURFACE_FORMAT_HINT_COMMON);
	rb_cCFWClassId.define_value("CHANNELS", COLLADAFW::COLLADA_TYPE::CHANNELS);
	rb_cCFWClassId.define_value("RANGE", COLLADAFW::COLLADA_TYPE::RANGE);
	rb_cCFWClassId.define_value("PRECISION", COLLADAFW::COLLADA_TYPE::PRECISION);
	rb_cCFWClassId.define_value("OPTION", COLLADAFW::COLLADA_TYPE::OPTION);
	rb_cCFWClassId.define_value("FX_SURFACE_INIT_PLANAR_COMMON", COLLADAFW::COLLADA_TYPE::FX_SURFACE_INIT_PLANAR_COMMON);
	rb_cCFWClassId.define_value("ALL", COLLADAFW::COLLADA_TYPE::ALL);
	rb_cCFWClassId.define_value("FX_SURFACE_INIT_VOLUME_COMMON", COLLADAFW::COLLADA_TYPE::FX_SURFACE_INIT_VOLUME_COMMON);
	rb_cCFWClassId.define_value("PRIMARY", COLLADAFW::COLLADA_TYPE::PRIMARY);
	rb_cCFWClassId.define_value("FX_SURFACE_INIT_CUBE_COMMON", COLLADAFW::COLLADA_TYPE::FX_SURFACE_INIT_CUBE_COMMON);
	rb_cCFWClassId.define_value("ORDER", COLLADAFW::COLLADA_TYPE::ORDER);
	rb_cCFWClassId.define_value("FACE", COLLADAFW::COLLADA_TYPE::FACE);
	rb_cCFWClassId.define_value("FX_SURFACE_INIT_FROM_COMMON", COLLADAFW::COLLADA_TYPE::FX_SURFACE_INIT_FROM_COMMON);
	rb_cCFWClassId.define_value("FX_SURFACE_COMMON", COLLADAFW::COLLADA_TYPE::FX_SURFACE_COMMON);
	rb_cCFWClassId.define_value("FORMAT", COLLADAFW::COLLADA_TYPE::FORMAT);
	rb_cCFWClassId.define_value("SIZE", COLLADAFW::COLLADA_TYPE::SIZE);
	rb_cCFWClassId.define_value("VIEWPORT_RATIO", COLLADAFW::COLLADA_TYPE::VIEWPORT_RATIO);
	rb_cCFWClassId.define_value("MIP_LEVELS", COLLADAFW::COLLADA_TYPE::MIP_LEVELS);
	rb_cCFWClassId.define_value("MIPMAP_GENERATE", COLLADAFW::COLLADA_TYPE::MIPMAP_GENERATE);
	rb_cCFWClassId.define_value("FX_SAMPLER1D_COMMON", COLLADAFW::COLLADA_TYPE::FX_SAMPLER1D_COMMON);
	rb_cCFWClassId.define_value("SOURCE", COLLADAFW::COLLADA_TYPE::SOURCE);
	rb_cCFWClassId.define_value("WRAP_S", COLLADAFW::COLLADA_TYPE::WRAP_S);
	rb_cCFWClassId.define_value("MINFILTER", COLLADAFW::COLLADA_TYPE::MINFILTER);
	rb_cCFWClassId.define_value("MAGFILTER", COLLADAFW::COLLADA_TYPE::MAGFILTER);
	rb_cCFWClassId.define_value("MIPFILTER", COLLADAFW::COLLADA_TYPE::MIPFILTER);
	rb_cCFWClassId.define_value("BORDER_COLOR", COLLADAFW::COLLADA_TYPE::BORDER_COLOR);
	rb_cCFWClassId.define_value("MIPMAP_MAXLEVEL", COLLADAFW::COLLADA_TYPE::MIPMAP_MAXLEVEL);
	rb_cCFWClassId.define_value("MIPMAP_BIAS", COLLADAFW::COLLADA_TYPE::MIPMAP_BIAS);
	rb_cCFWClassId.define_value("FX_SAMPLER2D_COMMON", COLLADAFW::COLLADA_TYPE::FX_SAMPLER2D_COMMON);
	rb_cCFWClassId.define_value("WRAP_T", COLLADAFW::COLLADA_TYPE::WRAP_T);
	rb_cCFWClassId.define_value("FX_SAMPLER3D_COMMON", COLLADAFW::COLLADA_TYPE::FX_SAMPLER3D_COMMON);
	rb_cCFWClassId.define_value("WRAP_P", COLLADAFW::COLLADA_TYPE::WRAP_P);
	rb_cCFWClassId.define_value("FX_SAMPLERCUBE_COMMON", COLLADAFW::COLLADA_TYPE::FX_SAMPLERCUBE_COMMON);
	rb_cCFWClassId.define_value("FX_SAMPLERRECT_COMMON", COLLADAFW::COLLADA_TYPE::FX_SAMPLERRECT_COMMON);
	rb_cCFWClassId.define_value("FX_SAMPLERDEPTH_COMMON", COLLADAFW::COLLADA_TYPE::FX_SAMPLERDEPTH_COMMON);
	rb_cCFWClassId.define_value("FX_COLORTARGET_COMMON", COLLADAFW::COLLADA_TYPE::FX_COLORTARGET_COMMON);
	rb_cCFWClassId.define_value("FX_DEPTHTARGET_COMMON", COLLADAFW::COLLADA_TYPE::FX_DEPTHTARGET_COMMON);
	rb_cCFWClassId.define_value("FX_STENCILTARGET_COMMON", COLLADAFW::COLLADA_TYPE::FX_STENCILTARGET_COMMON);
	rb_cCFWClassId.define_value("FX_CLEARCOLOR_COMMON", COLLADAFW::COLLADA_TYPE::FX_CLEARCOLOR_COMMON);
	rb_cCFWClassId.define_value("FX_CLEARDEPTH_COMMON", COLLADAFW::COLLADA_TYPE::FX_CLEARDEPTH_COMMON);
	rb_cCFWClassId.define_value("FX_CLEARSTENCIL_COMMON", COLLADAFW::COLLADA_TYPE::FX_CLEARSTENCIL_COMMON);
	rb_cCFWClassId.define_value("FX_ANNOTATE_COMMON", COLLADAFW::COLLADA_TYPE::FX_ANNOTATE_COMMON);
	rb_cCFWClassId.define_value("FX_INCLUDE_COMMON", COLLADAFW::COLLADA_TYPE::FX_INCLUDE_COMMON);
	rb_cCFWClassId.define_value("FX_NEWPARAM_COMMON", COLLADAFW::COLLADA_TYPE::FX_NEWPARAM_COMMON);
	rb_cCFWClassId.define_value("SEMANTIC", COLLADAFW::COLLADA_TYPE::SEMANTIC);
	rb_cCFWClassId.define_value("MODIFIER", COLLADAFW::COLLADA_TYPE::MODIFIER);
	rb_cCFWClassId.define_value("FX_CODE_PROFILE", COLLADAFW::COLLADA_TYPE::FX_CODE_PROFILE);
	rb_cCFWClassId.define_value("GL_SAMPLER1D", COLLADAFW::COLLADA_TYPE::GL_SAMPLER1D);
	rb_cCFWClassId.define_value("GL_SAMPLER2D", COLLADAFW::COLLADA_TYPE::GL_SAMPLER2D);
	rb_cCFWClassId.define_value("GL_SAMPLER3D", COLLADAFW::COLLADA_TYPE::GL_SAMPLER3D);
	rb_cCFWClassId.define_value("GL_SAMPLERCUBE", COLLADAFW::COLLADA_TYPE::GL_SAMPLERCUBE);
	rb_cCFWClassId.define_value("GL_SAMPLERRECT", COLLADAFW::COLLADA_TYPE::GL_SAMPLERRECT);
	rb_cCFWClassId.define_value("GL_SAMPLERDEPTH", COLLADAFW::COLLADA_TYPE::GL_SAMPLERDEPTH);
	rb_cCFWClassId.define_value("GLSL_NEWARRAY_TYPE", COLLADAFW::COLLADA_TYPE::GLSL_NEWARRAY_TYPE);
	rb_cCFWClassId.define_value("GLSL_SETARRAY_TYPE", COLLADAFW::COLLADA_TYPE::GLSL_SETARRAY_TYPE);
	rb_cCFWClassId.define_value("GLSL_SURFACE_TYPE", COLLADAFW::COLLADA_TYPE::GLSL_SURFACE_TYPE);
	rb_cCFWClassId.define_value("GENERATOR", COLLADAFW::COLLADA_TYPE::GENERATOR);
	rb_cCFWClassId.define_value("NAME", COLLADAFW::COLLADA_TYPE::NAME);
	rb_cCFWClassId.define_value("GLSL_NEWPARAM", COLLADAFW::COLLADA_TYPE::GLSL_NEWPARAM);
	rb_cCFWClassId.define_value("GLSL_SETPARAM_SIMPLE", COLLADAFW::COLLADA_TYPE::GLSL_SETPARAM_SIMPLE);
	rb_cCFWClassId.define_value("GLSL_SETPARAM", COLLADAFW::COLLADA_TYPE::GLSL_SETPARAM);
	rb_cCFWClassId.define_value("COMMON_FLOAT_OR_PARAM_TYPE", COLLADAFW::COLLADA_TYPE::COMMON_FLOAT_OR_PARAM_TYPE);
	rb_cCFWClassId.define_value("FLOAT", COLLADAFW::COLLADA_TYPE::FLOAT);
	rb_cCFWClassId.define_value("PARAM", COLLADAFW::COLLADA_TYPE::PARAM);
	rb_cCFWClassId.define_value("COMMON_COLOR_OR_TEXTURE_TYPE", COLLADAFW::COLLADA_TYPE::COMMON_COLOR_OR_TEXTURE_TYPE);
	rb_cCFWClassId.define_value("COLOR", COLLADAFW::COLLADA_TYPE::COLOR);
	rb_cCFWClassId.define_value("TEXTURE", COLLADAFW::COLLADA_TYPE::TEXTURE);
	rb_cCFWClassId.define_value("COMMON_TRANSPARENT_TYPE", COLLADAFW::COLLADA_TYPE::COMMON_TRANSPARENT_TYPE);
	rb_cCFWClassId.define_value("COMMON_NEWPARAM_TYPE", COLLADAFW::COLLADA_TYPE::COMMON_NEWPARAM_TYPE);
	rb_cCFWClassId.define_value("FLOAT2", COLLADAFW::COLLADA_TYPE::FLOAT2);
	rb_cCFWClassId.define_value("FLOAT3", COLLADAFW::COLLADA_TYPE::FLOAT3);
	rb_cCFWClassId.define_value("FLOAT4", COLLADAFW::COLLADA_TYPE::FLOAT4);
	rb_cCFWClassId.define_value("CG_SAMPLER1D", COLLADAFW::COLLADA_TYPE::CG_SAMPLER1D);
	rb_cCFWClassId.define_value("CG_SAMPLER2D", COLLADAFW::COLLADA_TYPE::CG_SAMPLER2D);
	rb_cCFWClassId.define_value("CG_SAMPLER3D", COLLADAFW::COLLADA_TYPE::CG_SAMPLER3D);
	rb_cCFWClassId.define_value("CG_SAMPLERCUBE", COLLADAFW::COLLADA_TYPE::CG_SAMPLERCUBE);
	rb_cCFWClassId.define_value("CG_SAMPLERRECT", COLLADAFW::COLLADA_TYPE::CG_SAMPLERRECT);
	rb_cCFWClassId.define_value("CG_SAMPLERDEPTH", COLLADAFW::COLLADA_TYPE::CG_SAMPLERDEPTH);
	rb_cCFWClassId.define_value("CG_CONNECT_PARAM", COLLADAFW::COLLADA_TYPE::CG_CONNECT_PARAM);
	rb_cCFWClassId.define_value("CG_NEWARRAY_TYPE", COLLADAFW::COLLADA_TYPE::CG_NEWARRAY_TYPE);
	rb_cCFWClassId.define_value("CG_SETARRAY_TYPE", COLLADAFW::COLLADA_TYPE::CG_SETARRAY_TYPE);
	rb_cCFWClassId.define_value("CG_SETUSER_TYPE", COLLADAFW::COLLADA_TYPE::CG_SETUSER_TYPE);
	rb_cCFWClassId.define_value("CG_SURFACE_TYPE", COLLADAFW::COLLADA_TYPE::CG_SURFACE_TYPE);
	rb_cCFWClassId.define_value("CG_NEWPARAM", COLLADAFW::COLLADA_TYPE::CG_NEWPARAM);
	rb_cCFWClassId.define_value("CG_SETPARAM_SIMPLE", COLLADAFW::COLLADA_TYPE::CG_SETPARAM_SIMPLE);
	rb_cCFWClassId.define_value("CG_SETPARAM", COLLADAFW::COLLADA_TYPE::CG_SETPARAM);
	rb_cCFWClassId.define_value("GLES_TEXTURE_CONSTANT_TYPE", COLLADAFW::COLLADA_TYPE::GLES_TEXTURE_CONSTANT_TYPE);
	rb_cCFWClassId.define_value("GLES_TEXENV_COMMAND_TYPE", COLLADAFW::COLLADA_TYPE::GLES_TEXENV_COMMAND_TYPE);
	rb_cCFWClassId.define_value("GLES_TEXCOMBINER_ARGUMENTRGB_TYPE", COLLADAFW::COLLADA_TYPE::GLES_TEXCOMBINER_ARGUMENTRGB_TYPE);
	rb_cCFWClassId.define_value("GLES_TEXCOMBINER_ARGUMENTALPHA_TYPE", COLLADAFW::COLLADA_TYPE::GLES_TEXCOMBINER_ARGUMENTALPHA_TYPE);
	rb_cCFWClassId.define_value("GLES_TEXCOMBINER_COMMANDRGB_TYPE", COLLADAFW::COLLADA_TYPE::GLES_TEXCOMBINER_COMMANDRGB_TYPE);
	rb_cCFWClassId.define_value("GLES_TEXCOMBINER_COMMANDALPHA_TYPE", COLLADAFW::COLLADA_TYPE::GLES_TEXCOMBINER_COMMANDALPHA_TYPE);
	rb_cCFWClassId.define_value("GLES_TEXCOMBINER_COMMAND_TYPE", COLLADAFW::COLLADA_TYPE::GLES_TEXCOMBINER_COMMAND_TYPE);
	rb_cCFWClassId.define_value("GLES_TEXTURE_PIPELINE", COLLADAFW::COLLADA_TYPE::GLES_TEXTURE_PIPELINE);
	rb_cCFWClassId.define_value("GLES_TEXTURE_UNIT", COLLADAFW::COLLADA_TYPE::GLES_TEXTURE_UNIT);
	rb_cCFWClassId.define_value("SURFACE", COLLADAFW::COLLADA_TYPE::SURFACE);
	rb_cCFWClassId.define_value("SAMPLER_STATE", COLLADAFW::COLLADA_TYPE::SAMPLER_STATE);
	rb_cCFWClassId.define_value("TEXCOORD", COLLADAFW::COLLADA_TYPE::TEXCOORD);
	rb_cCFWClassId.define_value("GLES_SAMPLER_STATE", COLLADAFW::COLLADA_TYPE::GLES_SAMPLER_STATE);
	rb_cCFWClassId.define_value("GLES_NEWPARAM", COLLADAFW::COLLADA_TYPE::GLES_NEWPARAM);
	rb_cCFWClassId.define_value("FX_SURFACE_INIT_COMMON", COLLADAFW::COLLADA_TYPE::FX_SURFACE_INIT_COMMON);
	rb_cCFWClassId.define_value("INIT_AS_NULL", COLLADAFW::COLLADA_TYPE::INIT_AS_NULL);
	rb_cCFWClassId.define_value("INIT_AS_TARGET", COLLADAFW::COLLADA_TYPE::INIT_AS_TARGET);
	rb_cCFWClassId.define_value("FX_ANNOTATE_TYPE_COMMON", COLLADAFW::COLLADA_TYPE::FX_ANNOTATE_TYPE_COMMON);
	rb_cCFWClassId.define_value("BOOL", COLLADAFW::COLLADA_TYPE::BOOL);
	rb_cCFWClassId.define_value("BOOL2", COLLADAFW::COLLADA_TYPE::BOOL2);
	rb_cCFWClassId.define_value("BOOL3", COLLADAFW::COLLADA_TYPE::BOOL3);
	rb_cCFWClassId.define_value("BOOL4", COLLADAFW::COLLADA_TYPE::BOOL4);
	rb_cCFWClassId.define_value("INT", COLLADAFW::COLLADA_TYPE::INT);
	rb_cCFWClassId.define_value("INT2", COLLADAFW::COLLADA_TYPE::INT2);
	rb_cCFWClassId.define_value("INT3", COLLADAFW::COLLADA_TYPE::INT3);
	rb_cCFWClassId.define_value("INT4", COLLADAFW::COLLADA_TYPE::INT4);
	rb_cCFWClassId.define_value("FLOAT2X2", COLLADAFW::COLLADA_TYPE::FLOAT2X2);
	rb_cCFWClassId.define_value("FLOAT3X3", COLLADAFW::COLLADA_TYPE::FLOAT3X3);
	rb_cCFWClassId.define_value("FLOAT4X4", COLLADAFW::COLLADA_TYPE::FLOAT4X4);
	rb_cCFWClassId.define_value("STRING", COLLADAFW::COLLADA_TYPE::STRING);
	rb_cCFWClassId.define_value("FX_BASIC_TYPE_COMMON", COLLADAFW::COLLADA_TYPE::FX_BASIC_TYPE_COMMON);
	rb_cCFWClassId.define_value("FLOAT1X1", COLLADAFW::COLLADA_TYPE::FLOAT1X1);
	rb_cCFWClassId.define_value("FLOAT1X2", COLLADAFW::COLLADA_TYPE::FLOAT1X2);
	rb_cCFWClassId.define_value("FLOAT1X3", COLLADAFW::COLLADA_TYPE::FLOAT1X3);
	rb_cCFWClassId.define_value("FLOAT1X4", COLLADAFW::COLLADA_TYPE::FLOAT1X4);
	rb_cCFWClassId.define_value("FLOAT2X1", COLLADAFW::COLLADA_TYPE::FLOAT2X1);
	rb_cCFWClassId.define_value("FLOAT2X3", COLLADAFW::COLLADA_TYPE::FLOAT2X3);
	rb_cCFWClassId.define_value("FLOAT2X4", COLLADAFW::COLLADA_TYPE::FLOAT2X4);
	rb_cCFWClassId.define_value("FLOAT3X1", COLLADAFW::COLLADA_TYPE::FLOAT3X1);
	rb_cCFWClassId.define_value("FLOAT3X2", COLLADAFW::COLLADA_TYPE::FLOAT3X2);
	rb_cCFWClassId.define_value("FLOAT3X4", COLLADAFW::COLLADA_TYPE::FLOAT3X4);
	rb_cCFWClassId.define_value("FLOAT4X1", COLLADAFW::COLLADA_TYPE::FLOAT4X1);
	rb_cCFWClassId.define_value("FLOAT4X2", COLLADAFW::COLLADA_TYPE::FLOAT4X2);
	rb_cCFWClassId.define_value("FLOAT4X3", COLLADAFW::COLLADA_TYPE::FLOAT4X3);
	rb_cCFWClassId.define_value("ENUM", COLLADAFW::COLLADA_TYPE::ENUM);
	rb_cCFWClassId.define_value("GL_PIPELINE_SETTINGS", COLLADAFW::COLLADA_TYPE::GL_PIPELINE_SETTINGS);
	rb_cCFWClassId.define_value("ALPHA_FUNC", COLLADAFW::COLLADA_TYPE::ALPHA_FUNC);
	rb_cCFWClassId.define_value("FUNC", COLLADAFW::COLLADA_TYPE::FUNC);
	rb_cCFWClassId.define_value("VALUE", COLLADAFW::COLLADA_TYPE::VALUE);
	rb_cCFWClassId.define_value("BLEND_FUNC", COLLADAFW::COLLADA_TYPE::BLEND_FUNC);
	rb_cCFWClassId.define_value("SRC", COLLADAFW::COLLADA_TYPE::SRC);
	rb_cCFWClassId.define_value("DEST", COLLADAFW::COLLADA_TYPE::DEST);
	rb_cCFWClassId.define_value("BLEND_FUNC_SEPARATE", COLLADAFW::COLLADA_TYPE::BLEND_FUNC_SEPARATE);
	rb_cCFWClassId.define_value("SRC_RGB", COLLADAFW::COLLADA_TYPE::SRC_RGB);
	rb_cCFWClassId.define_value("DEST_RGB", COLLADAFW::COLLADA_TYPE::DEST_RGB);
	rb_cCFWClassId.define_value("SRC_ALPHA", COLLADAFW::COLLADA_TYPE::SRC_ALPHA);
	rb_cCFWClassId.define_value("DEST_ALPHA", COLLADAFW::COLLADA_TYPE::DEST_ALPHA);
	rb_cCFWClassId.define_value("BLEND_EQUATION", COLLADAFW::COLLADA_TYPE::BLEND_EQUATION);
	rb_cCFWClassId.define_value("BLEND_EQUATION_SEPARATE", COLLADAFW::COLLADA_TYPE::BLEND_EQUATION_SEPARATE);
	rb_cCFWClassId.define_value("RGB", COLLADAFW::COLLADA_TYPE::RGB);
	rb_cCFWClassId.define_value("ALPHA", COLLADAFW::COLLADA_TYPE::ALPHA);
	rb_cCFWClassId.define_value("COLOR_MATERIAL", COLLADAFW::COLLADA_TYPE::COLOR_MATERIAL);
	rb_cCFWClassId.define_value("MODE", COLLADAFW::COLLADA_TYPE::MODE);
	rb_cCFWClassId.define_value("CULL_FACE", COLLADAFW::COLLADA_TYPE::CULL_FACE);
	rb_cCFWClassId.define_value("DEPTH_FUNC", COLLADAFW::COLLADA_TYPE::DEPTH_FUNC);
	rb_cCFWClassId.define_value("FOG_MODE", COLLADAFW::COLLADA_TYPE::FOG_MODE);
	rb_cCFWClassId.define_value("FOG_COORD_SRC", COLLADAFW::COLLADA_TYPE::FOG_COORD_SRC);
	rb_cCFWClassId.define_value("FRONT_FACE", COLLADAFW::COLLADA_TYPE::FRONT_FACE);
	rb_cCFWClassId.define_value("LIGHT_MODEL_COLOR_CONTROL", COLLADAFW::COLLADA_TYPE::LIGHT_MODEL_COLOR_CONTROL);
	rb_cCFWClassId.define_value("LOGIC_OP", COLLADAFW::COLLADA_TYPE::LOGIC_OP);
	rb_cCFWClassId.define_value("POLYGON_MODE", COLLADAFW::COLLADA_TYPE::POLYGON_MODE);
	rb_cCFWClassId.define_value("SHADE_MODEL", COLLADAFW::COLLADA_TYPE::SHADE_MODEL);
	rb_cCFWClassId.define_value("STENCIL_FUNC", COLLADAFW::COLLADA_TYPE::STENCIL_FUNC);
	rb_cCFWClassId.define_value("REF", COLLADAFW::COLLADA_TYPE::REF);
	rb_cCFWClassId.define_value("MASK", COLLADAFW::COLLADA_TYPE::MASK);
	rb_cCFWClassId.define_value("STENCIL_OP", COLLADAFW::COLLADA_TYPE::STENCIL_OP);
	rb_cCFWClassId.define_value("FAIL", COLLADAFW::COLLADA_TYPE::FAIL);
	rb_cCFWClassId.define_value("ZFAIL", COLLADAFW::COLLADA_TYPE::ZFAIL);
	rb_cCFWClassId.define_value("ZPASS", COLLADAFW::COLLADA_TYPE::ZPASS);
	rb_cCFWClassId.define_value("STENCIL_FUNC_SEPARATE", COLLADAFW::COLLADA_TYPE::STENCIL_FUNC_SEPARATE);
	rb_cCFWClassId.define_value("FRONT", COLLADAFW::COLLADA_TYPE::FRONT);
	rb_cCFWClassId.define_value("BACK", COLLADAFW::COLLADA_TYPE::BACK);
	rb_cCFWClassId.define_value("STENCIL_OP_SEPARATE", COLLADAFW::COLLADA_TYPE::STENCIL_OP_SEPARATE);
	rb_cCFWClassId.define_value("STENCIL_MASK_SEPARATE", COLLADAFW::COLLADA_TYPE::STENCIL_MASK_SEPARATE);
	rb_cCFWClassId.define_value("LIGHT_ENABLE", COLLADAFW::COLLADA_TYPE::LIGHT_ENABLE);
	rb_cCFWClassId.define_value("LIGHT_AMBIENT", COLLADAFW::COLLADA_TYPE::LIGHT_AMBIENT);
	rb_cCFWClassId.define_value("LIGHT_DIFFUSE", COLLADAFW::COLLADA_TYPE::LIGHT_DIFFUSE);
	rb_cCFWClassId.define_value("LIGHT_SPECULAR", COLLADAFW::COLLADA_TYPE::LIGHT_SPECULAR);
	rb_cCFWClassId.define_value("LIGHT_POSITION", COLLADAFW::COLLADA_TYPE::LIGHT_POSITION);
	rb_cCFWClassId.define_value("LIGHT_CONSTANT_ATTENUATION", COLLADAFW::COLLADA_TYPE::LIGHT_CONSTANT_ATTENUATION);
	rb_cCFWClassId.define_value("LIGHT_LINEAR_ATTENUATION", COLLADAFW::COLLADA_TYPE::LIGHT_LINEAR_ATTENUATION);
	rb_cCFWClassId.define_value("LIGHT_QUADRATIC_ATTENUATION", COLLADAFW::COLLADA_TYPE::LIGHT_QUADRATIC_ATTENUATION);
	rb_cCFWClassId.define_value("LIGHT_SPOT_CUTOFF", COLLADAFW::COLLADA_TYPE::LIGHT_SPOT_CUTOFF);
	rb_cCFWClassId.define_value("LIGHT_SPOT_DIRECTION", COLLADAFW::COLLADA_TYPE::LIGHT_SPOT_DIRECTION);
	rb_cCFWClassId.define_value("LIGHT_SPOT_EXPONENT", COLLADAFW::COLLADA_TYPE::LIGHT_SPOT_EXPONENT);
	rb_cCFWClassId.define_value("TEXTURE1D", COLLADAFW::COLLADA_TYPE::TEXTURE1D);
	rb_cCFWClassId.define_value("TEXTURE2D", COLLADAFW::COLLADA_TYPE::TEXTURE2D);
	rb_cCFWClassId.define_value("TEXTURE3D", COLLADAFW::COLLADA_TYPE::TEXTURE3D);
	rb_cCFWClassId.define_value("TEXTURECUBE", COLLADAFW::COLLADA_TYPE::TEXTURECUBE);
	rb_cCFWClassId.define_value("TEXTURERECT", COLLADAFW::COLLADA_TYPE::TEXTURERECT);
	rb_cCFWClassId.define_value("TEXTUREDEPTH", COLLADAFW::COLLADA_TYPE::TEXTUREDEPTH);
	rb_cCFWClassId.define_value("TEXTURE1D_ENABLE", COLLADAFW::COLLADA_TYPE::TEXTURE1D_ENABLE);
	rb_cCFWClassId.define_value("TEXTURE2D_ENABLE", COLLADAFW::COLLADA_TYPE::TEXTURE2D_ENABLE);
	rb_cCFWClassId.define_value("TEXTURE3D_ENABLE", COLLADAFW::COLLADA_TYPE::TEXTURE3D_ENABLE);
	rb_cCFWClassId.define_value("TEXTURECUBE_ENABLE", COLLADAFW::COLLADA_TYPE::TEXTURECUBE_ENABLE);
	rb_cCFWClassId.define_value("TEXTURERECT_ENABLE", COLLADAFW::COLLADA_TYPE::TEXTURERECT_ENABLE);
	rb_cCFWClassId.define_value("TEXTUREDEPTH_ENABLE", COLLADAFW::COLLADA_TYPE::TEXTUREDEPTH_ENABLE);
	rb_cCFWClassId.define_value("TEXTURE_ENV_COLOR", COLLADAFW::COLLADA_TYPE::TEXTURE_ENV_COLOR);
	rb_cCFWClassId.define_value("TEXTURE_ENV_MODE", COLLADAFW::COLLADA_TYPE::TEXTURE_ENV_MODE);
	rb_cCFWClassId.define_value("CLIP_PLANE", COLLADAFW::COLLADA_TYPE::CLIP_PLANE);
	rb_cCFWClassId.define_value("CLIP_PLANE_ENABLE", COLLADAFW::COLLADA_TYPE::CLIP_PLANE_ENABLE);
	rb_cCFWClassId.define_value("BLEND_COLOR", COLLADAFW::COLLADA_TYPE::BLEND_COLOR);
	rb_cCFWClassId.define_value("CLEAR_COLOR", COLLADAFW::COLLADA_TYPE::CLEAR_COLOR);
	rb_cCFWClassId.define_value("CLEAR_STENCIL", COLLADAFW::COLLADA_TYPE::CLEAR_STENCIL);
	rb_cCFWClassId.define_value("CLEAR_DEPTH", COLLADAFW::COLLADA_TYPE::CLEAR_DEPTH);
	rb_cCFWClassId.define_value("COLOR_MASK", COLLADAFW::COLLADA_TYPE::COLOR_MASK);
	rb_cCFWClassId.define_value("DEPTH_BOUNDS", COLLADAFW::COLLADA_TYPE::DEPTH_BOUNDS);
	rb_cCFWClassId.define_value("DEPTH_MASK", COLLADAFW::COLLADA_TYPE::DEPTH_MASK);
	rb_cCFWClassId.define_value("DEPTH_RANGE", COLLADAFW::COLLADA_TYPE::DEPTH_RANGE);
	rb_cCFWClassId.define_value("FOG_DENSITY", COLLADAFW::COLLADA_TYPE::FOG_DENSITY);
	rb_cCFWClassId.define_value("FOG_START", COLLADAFW::COLLADA_TYPE::FOG_START);
	rb_cCFWClassId.define_value("FOG_END", COLLADAFW::COLLADA_TYPE::FOG_END);
	rb_cCFWClassId.define_value("FOG_COLOR", COLLADAFW::COLLADA_TYPE::FOG_COLOR);
	rb_cCFWClassId.define_value("LIGHT_MODEL_AMBIENT", COLLADAFW::COLLADA_TYPE::LIGHT_MODEL_AMBIENT);
	rb_cCFWClassId.define_value("LIGHTING_ENABLE", COLLADAFW::COLLADA_TYPE::LIGHTING_ENABLE);
	rb_cCFWClassId.define_value("LINE_STIPPLE", COLLADAFW::COLLADA_TYPE::LINE_STIPPLE);
	rb_cCFWClassId.define_value("LINE_WIDTH", COLLADAFW::COLLADA_TYPE::LINE_WIDTH);
	rb_cCFWClassId.define_value("MATERIAL_AMBIENT", COLLADAFW::COLLADA_TYPE::MATERIAL_AMBIENT);
	rb_cCFWClassId.define_value("MATERIAL_DIFFUSE", COLLADAFW::COLLADA_TYPE::MATERIAL_DIFFUSE);
	rb_cCFWClassId.define_value("MATERIAL_EMISSION", COLLADAFW::COLLADA_TYPE::MATERIAL_EMISSION);
	rb_cCFWClassId.define_value("MATERIAL_SHININESS", COLLADAFW::COLLADA_TYPE::MATERIAL_SHININESS);
	rb_cCFWClassId.define_value("MATERIAL_SPECULAR", COLLADAFW::COLLADA_TYPE::MATERIAL_SPECULAR);
	rb_cCFWClassId.define_value("MODEL_VIEW_MATRIX", COLLADAFW::COLLADA_TYPE::MODEL_VIEW_MATRIX);
	rb_cCFWClassId.define_value("POINT_DISTANCE_ATTENUATION", COLLADAFW::COLLADA_TYPE::POINT_DISTANCE_ATTENUATION);
	rb_cCFWClassId.define_value("POINT_FADE_THRESHOLD_SIZE", COLLADAFW::COLLADA_TYPE::POINT_FADE_THRESHOLD_SIZE);
	rb_cCFWClassId.define_value("POINT_SIZE", COLLADAFW::COLLADA_TYPE::POINT_SIZE);
	rb_cCFWClassId.define_value("POINT_SIZE_MIN", COLLADAFW::COLLADA_TYPE::POINT_SIZE_MIN);
	rb_cCFWClassId.define_value("POINT_SIZE_MAX", COLLADAFW::COLLADA_TYPE::POINT_SIZE_MAX);
	rb_cCFWClassId.define_value("POLYGON_OFFSET", COLLADAFW::COLLADA_TYPE::POLYGON_OFFSET);
	rb_cCFWClassId.define_value("PROJECTION_MATRIX", COLLADAFW::COLLADA_TYPE::PROJECTION_MATRIX);
	rb_cCFWClassId.define_value("SCISSOR", COLLADAFW::COLLADA_TYPE::SCISSOR);
	rb_cCFWClassId.define_value("STENCIL_MASK", COLLADAFW::COLLADA_TYPE::STENCIL_MASK);
	rb_cCFWClassId.define_value("ALPHA_TEST_ENABLE", COLLADAFW::COLLADA_TYPE::ALPHA_TEST_ENABLE);
	rb_cCFWClassId.define_value("AUTO_NORMAL_ENABLE", COLLADAFW::COLLADA_TYPE::AUTO_NORMAL_ENABLE);
	rb_cCFWClassId.define_value("BLEND_ENABLE", COLLADAFW::COLLADA_TYPE::BLEND_ENABLE);
	rb_cCFWClassId.define_value("COLOR_LOGIC_OP_ENABLE", COLLADAFW::COLLADA_TYPE::COLOR_LOGIC_OP_ENABLE);
	rb_cCFWClassId.define_value("COLOR_MATERIAL_ENABLE", COLLADAFW::COLLADA_TYPE::COLOR_MATERIAL_ENABLE);
	rb_cCFWClassId.define_value("CULL_FACE_ENABLE", COLLADAFW::COLLADA_TYPE::CULL_FACE_ENABLE);
	rb_cCFWClassId.define_value("DEPTH_BOUNDS_ENABLE", COLLADAFW::COLLADA_TYPE::DEPTH_BOUNDS_ENABLE);
	rb_cCFWClassId.define_value("DEPTH_CLAMP_ENABLE", COLLADAFW::COLLADA_TYPE::DEPTH_CLAMP_ENABLE);
	rb_cCFWClassId.define_value("DEPTH_TEST_ENABLE", COLLADAFW::COLLADA_TYPE::DEPTH_TEST_ENABLE);
	rb_cCFWClassId.define_value("DITHER_ENABLE", COLLADAFW::COLLADA_TYPE::DITHER_ENABLE);
	rb_cCFWClassId.define_value("FOG_ENABLE", COLLADAFW::COLLADA_TYPE::FOG_ENABLE);
	rb_cCFWClassId.define_value("LIGHT_MODEL_LOCAL_VIEWER_ENABLE", COLLADAFW::COLLADA_TYPE::LIGHT_MODEL_LOCAL_VIEWER_ENABLE);
	rb_cCFWClassId.define_value("LIGHT_MODEL_TWO_SIDE_ENABLE", COLLADAFW::COLLADA_TYPE::LIGHT_MODEL_TWO_SIDE_ENABLE);
	rb_cCFWClassId.define_value("LINE_SMOOTH_ENABLE", COLLADAFW::COLLADA_TYPE::LINE_SMOOTH_ENABLE);
	rb_cCFWClassId.define_value("LINE_STIPPLE_ENABLE", COLLADAFW::COLLADA_TYPE::LINE_STIPPLE_ENABLE);
	rb_cCFWClassId.define_value("LOGIC_OP_ENABLE", COLLADAFW::COLLADA_TYPE::LOGIC_OP_ENABLE);
	rb_cCFWClassId.define_value("MULTISAMPLE_ENABLE", COLLADAFW::COLLADA_TYPE::MULTISAMPLE_ENABLE);
	rb_cCFWClassId.define_value("NORMALIZE_ENABLE", COLLADAFW::COLLADA_TYPE::NORMALIZE_ENABLE);
	rb_cCFWClassId.define_value("POINT_SMOOTH_ENABLE", COLLADAFW::COLLADA_TYPE::POINT_SMOOTH_ENABLE);
	rb_cCFWClassId.define_value("POLYGON_OFFSET_FILL_ENABLE", COLLADAFW::COLLADA_TYPE::POLYGON_OFFSET_FILL_ENABLE);
	rb_cCFWClassId.define_value("POLYGON_OFFSET_LINE_ENABLE", COLLADAFW::COLLADA_TYPE::POLYGON_OFFSET_LINE_ENABLE);
	rb_cCFWClassId.define_value("POLYGON_OFFSET_POINT_ENABLE", COLLADAFW::COLLADA_TYPE::POLYGON_OFFSET_POINT_ENABLE);
	rb_cCFWClassId.define_value("POLYGON_SMOOTH_ENABLE", COLLADAFW::COLLADA_TYPE::POLYGON_SMOOTH_ENABLE);
	rb_cCFWClassId.define_value("POLYGON_STIPPLE_ENABLE", COLLADAFW::COLLADA_TYPE::POLYGON_STIPPLE_ENABLE);
	rb_cCFWClassId.define_value("RESCALE_NORMAL_ENABLE", COLLADAFW::COLLADA_TYPE::RESCALE_NORMAL_ENABLE);
	rb_cCFWClassId.define_value("SAMPLE_ALPHA_TO_COVERAGE_ENABLE", COLLADAFW::COLLADA_TYPE::SAMPLE_ALPHA_TO_COVERAGE_ENABLE);
	rb_cCFWClassId.define_value("SAMPLE_ALPHA_TO_ONE_ENABLE", COLLADAFW::COLLADA_TYPE::SAMPLE_ALPHA_TO_ONE_ENABLE);
	rb_cCFWClassId.define_value("SAMPLE_COVERAGE_ENABLE", COLLADAFW::COLLADA_TYPE::SAMPLE_COVERAGE_ENABLE);
	rb_cCFWClassId.define_value("SCISSOR_TEST_ENABLE", COLLADAFW::COLLADA_TYPE::SCISSOR_TEST_ENABLE);
	rb_cCFWClassId.define_value("STENCIL_TEST_ENABLE", COLLADAFW::COLLADA_TYPE::STENCIL_TEST_ENABLE);
	rb_cCFWClassId.define_value("GLSL_PARAM_TYPE", COLLADAFW::COLLADA_TYPE::GLSL_PARAM_TYPE);
	rb_cCFWClassId.define_value("CG_PARAM_TYPE", COLLADAFW::COLLADA_TYPE::CG_PARAM_TYPE);
	rb_cCFWClassId.define_value("BOOL1", COLLADAFW::COLLADA_TYPE::BOOL1);
	rb_cCFWClassId.define_value("BOOL1X1", COLLADAFW::COLLADA_TYPE::BOOL1X1);
	rb_cCFWClassId.define_value("BOOL1X2", COLLADAFW::COLLADA_TYPE::BOOL1X2);
	rb_cCFWClassId.define_value("BOOL1X3", COLLADAFW::COLLADA_TYPE::BOOL1X3);
	rb_cCFWClassId.define_value("BOOL1X4", COLLADAFW::COLLADA_TYPE::BOOL1X4);
	rb_cCFWClassId.define_value("BOOL2X1", COLLADAFW::COLLADA_TYPE::BOOL2X1);
	rb_cCFWClassId.define_value("BOOL2X2", COLLADAFW::COLLADA_TYPE::BOOL2X2);
	rb_cCFWClassId.define_value("BOOL2X3", COLLADAFW::COLLADA_TYPE::BOOL2X3);
	rb_cCFWClassId.define_value("BOOL2X4", COLLADAFW::COLLADA_TYPE::BOOL2X4);
	rb_cCFWClassId.define_value("BOOL3X1", COLLADAFW::COLLADA_TYPE::BOOL3X1);
	rb_cCFWClassId.define_value("BOOL3X2", COLLADAFW::COLLADA_TYPE::BOOL3X2);
	rb_cCFWClassId.define_value("BOOL3X3", COLLADAFW::COLLADA_TYPE::BOOL3X3);
	rb_cCFWClassId.define_value("BOOL3X4", COLLADAFW::COLLADA_TYPE::BOOL3X4);
	rb_cCFWClassId.define_value("BOOL4X1", COLLADAFW::COLLADA_TYPE::BOOL4X1);
	rb_cCFWClassId.define_value("BOOL4X2", COLLADAFW::COLLADA_TYPE::BOOL4X2);
	rb_cCFWClassId.define_value("BOOL4X3", COLLADAFW::COLLADA_TYPE::BOOL4X3);
	rb_cCFWClassId.define_value("BOOL4X4", COLLADAFW::COLLADA_TYPE::BOOL4X4);
	rb_cCFWClassId.define_value("FLOAT1", COLLADAFW::COLLADA_TYPE::FLOAT1);
	rb_cCFWClassId.define_value("INT1", COLLADAFW::COLLADA_TYPE::INT1);
	rb_cCFWClassId.define_value("INT1X1", COLLADAFW::COLLADA_TYPE::INT1X1);
	rb_cCFWClassId.define_value("INT1X2", COLLADAFW::COLLADA_TYPE::INT1X2);
	rb_cCFWClassId.define_value("INT1X3", COLLADAFW::COLLADA_TYPE::INT1X3);
	rb_cCFWClassId.define_value("INT1X4", COLLADAFW::COLLADA_TYPE::INT1X4);
	rb_cCFWClassId.define_value("INT2X1", COLLADAFW::COLLADA_TYPE::INT2X1);
	rb_cCFWClassId.define_value("INT2X2", COLLADAFW::COLLADA_TYPE::INT2X2);
	rb_cCFWClassId.define_value("INT2X3", COLLADAFW::COLLADA_TYPE::INT2X3);
	rb_cCFWClassId.define_value("INT2X4", COLLADAFW::COLLADA_TYPE::INT2X4);
	rb_cCFWClassId.define_value("INT3X1", COLLADAFW::COLLADA_TYPE::INT3X1);
	rb_cCFWClassId.define_value("INT3X2", COLLADAFW::COLLADA_TYPE::INT3X2);
	rb_cCFWClassId.define_value("INT3X3", COLLADAFW::COLLADA_TYPE::INT3X3);
	rb_cCFWClassId.define_value("INT3X4", COLLADAFW::COLLADA_TYPE::INT3X4);
	rb_cCFWClassId.define_value("INT4X1", COLLADAFW::COLLADA_TYPE::INT4X1);
	rb_cCFWClassId.define_value("INT4X2", COLLADAFW::COLLADA_TYPE::INT4X2);
	rb_cCFWClassId.define_value("INT4X3", COLLADAFW::COLLADA_TYPE::INT4X3);
	rb_cCFWClassId.define_value("INT4X4", COLLADAFW::COLLADA_TYPE::INT4X4);
	rb_cCFWClassId.define_value("HALF", COLLADAFW::COLLADA_TYPE::HALF);
	rb_cCFWClassId.define_value("HALF1", COLLADAFW::COLLADA_TYPE::HALF1);
	rb_cCFWClassId.define_value("HALF2", COLLADAFW::COLLADA_TYPE::HALF2);
	rb_cCFWClassId.define_value("HALF3", COLLADAFW::COLLADA_TYPE::HALF3);
	rb_cCFWClassId.define_value("HALF4", COLLADAFW::COLLADA_TYPE::HALF4);
	rb_cCFWClassId.define_value("HALF1X1", COLLADAFW::COLLADA_TYPE::HALF1X1);
	rb_cCFWClassId.define_value("HALF1X2", COLLADAFW::COLLADA_TYPE::HALF1X2);
	rb_cCFWClassId.define_value("HALF1X3", COLLADAFW::COLLADA_TYPE::HALF1X3);
	rb_cCFWClassId.define_value("HALF1X4", COLLADAFW::COLLADA_TYPE::HALF1X4);
	rb_cCFWClassId.define_value("HALF2X1", COLLADAFW::COLLADA_TYPE::HALF2X1);
	rb_cCFWClassId.define_value("HALF2X2", COLLADAFW::COLLADA_TYPE::HALF2X2);
	rb_cCFWClassId.define_value("HALF2X3", COLLADAFW::COLLADA_TYPE::HALF2X3);
	rb_cCFWClassId.define_value("HALF2X4", COLLADAFW::COLLADA_TYPE::HALF2X4);
	rb_cCFWClassId.define_value("HALF3X1", COLLADAFW::COLLADA_TYPE::HALF3X1);
	rb_cCFWClassId.define_value("HALF3X2", COLLADAFW::COLLADA_TYPE::HALF3X2);
	rb_cCFWClassId.define_value("HALF3X3", COLLADAFW::COLLADA_TYPE::HALF3X3);
	rb_cCFWClassId.define_value("HALF3X4", COLLADAFW::COLLADA_TYPE::HALF3X4);
	rb_cCFWClassId.define_value("HALF4X1", COLLADAFW::COLLADA_TYPE::HALF4X1);
	rb_cCFWClassId.define_value("HALF4X2", COLLADAFW::COLLADA_TYPE::HALF4X2);
	rb_cCFWClassId.define_value("HALF4X3", COLLADAFW::COLLADA_TYPE::HALF4X3);
	rb_cCFWClassId.define_value("HALF4X4", COLLADAFW::COLLADA_TYPE::HALF4X4);
	rb_cCFWClassId.define_value("FIXED", COLLADAFW::COLLADA_TYPE::FIXED);
	rb_cCFWClassId.define_value("FIXED1", COLLADAFW::COLLADA_TYPE::FIXED1);
	rb_cCFWClassId.define_value("FIXED2", COLLADAFW::COLLADA_TYPE::FIXED2);
	rb_cCFWClassId.define_value("FIXED3", COLLADAFW::COLLADA_TYPE::FIXED3);
	rb_cCFWClassId.define_value("FIXED4", COLLADAFW::COLLADA_TYPE::FIXED4);
	rb_cCFWClassId.define_value("FIXED1X1", COLLADAFW::COLLADA_TYPE::FIXED1X1);
	rb_cCFWClassId.define_value("FIXED1X2", COLLADAFW::COLLADA_TYPE::FIXED1X2);
	rb_cCFWClassId.define_value("FIXED1X3", COLLADAFW::COLLADA_TYPE::FIXED1X3);
	rb_cCFWClassId.define_value("FIXED1X4", COLLADAFW::COLLADA_TYPE::FIXED1X4);
	rb_cCFWClassId.define_value("FIXED2X1", COLLADAFW::COLLADA_TYPE::FIXED2X1);
	rb_cCFWClassId.define_value("FIXED2X2", COLLADAFW::COLLADA_TYPE::FIXED2X2);
	rb_cCFWClassId.define_value("FIXED2X3", COLLADAFW::COLLADA_TYPE::FIXED2X3);
	rb_cCFWClassId.define_value("FIXED2X4", COLLADAFW::COLLADA_TYPE::FIXED2X4);
	rb_cCFWClassId.define_value("FIXED3X1", COLLADAFW::COLLADA_TYPE::FIXED3X1);
	rb_cCFWClassId.define_value("FIXED3X2", COLLADAFW::COLLADA_TYPE::FIXED3X2);
	rb_cCFWClassId.define_value("FIXED3X3", COLLADAFW::COLLADA_TYPE::FIXED3X3);
	rb_cCFWClassId.define_value("FIXED3X4", COLLADAFW::COLLADA_TYPE::FIXED3X4);
	rb_cCFWClassId.define_value("FIXED4X1", COLLADAFW::COLLADA_TYPE::FIXED4X1);
	rb_cCFWClassId.define_value("FIXED4X2", COLLADAFW::COLLADA_TYPE::FIXED4X2);
	rb_cCFWClassId.define_value("FIXED4X3", COLLADAFW::COLLADA_TYPE::FIXED4X3);
	rb_cCFWClassId.define_value("FIXED4X4", COLLADAFW::COLLADA_TYPE::FIXED4X4);
	rb_cCFWClassId.define_value("GLES_PIPELINE_SETTINGS", COLLADAFW::COLLADA_TYPE::GLES_PIPELINE_SETTINGS);
	rb_cCFWClassId.define_value("TEXTURE_PIPELINE", COLLADAFW::COLLADA_TYPE::TEXTURE_PIPELINE);
	rb_cCFWClassId.define_value("LIGHT_LINEAR_ATTENUTATION", COLLADAFW::COLLADA_TYPE::LIGHT_LINEAR_ATTENUTATION);
	rb_cCFWClassId.define_value("TEXTURE_PIPELINE_ENABLE", COLLADAFW::COLLADA_TYPE::TEXTURE_PIPELINE_ENABLE);
	rb_cCFWClassId.define_value("GLES_BASIC_TYPE_COMMON", COLLADAFW::COLLADA_TYPE::GLES_BASIC_TYPE_COMMON);
	rb_cCFWClassId.define_value("COLLADA", COLLADAFW::COLLADA_TYPE::COLLADA);
	rb_cCFWClassId.define_value("SCENE", COLLADAFW::COLLADA_TYPE::SCENE);
	rb_cCFWClassId.define_value("IDREF_ARRAY", COLLADAFW::COLLADA_TYPE::IDREF_ARRAY);
	rb_cCFWClassId.define_value("NAME_ARRAY", COLLADAFW::COLLADA_TYPE::NAME_ARRAY);
	rb_cCFWClassId.define_value("BOOL_ARRAY", COLLADAFW::COLLADA_TYPE::BOOL_ARRAY);
	rb_cCFWClassId.define_value("FLOAT_ARRAY", COLLADAFW::COLLADA_TYPE::FLOAT_ARRAY);
	rb_cCFWClassId.define_value("INT_ARRAY", COLLADAFW::COLLADA_TYPE::INT_ARRAY);
	rb_cCFWClassId.define_value("ACCESSOR", COLLADAFW::COLLADA_TYPE::ACCESSOR);
	rb_cCFWClassId.define_value("TECHNIQUE_COMMON", COLLADAFW::COLLADA_TYPE::TECHNIQUE_COMMON);
	rb_cCFWClassId.define_value("GEOMETRY", COLLADAFW::COLLADA_TYPE::GEOMETRY);
	rb_cCFWClassId.define_value("MESH", COLLADAFW::COLLADA_TYPE::MESH);
	rb_cCFWClassId.define_value("SPLINE", COLLADAFW::COLLADA_TYPE::SPLINE);
	rb_cCFWClassId.define_value("CONTROL_VERTICES", COLLADAFW::COLLADA_TYPE::CONTROL_VERTICES);
	rb_cCFWClassId.define_value("P", COLLADAFW::COLLADA_TYPE::P);
	rb_cCFWClassId.define_value("LINES", COLLADAFW::COLLADA_TYPE::LINES);
	rb_cCFWClassId.define_value("LINESTRIPS", COLLADAFW::COLLADA_TYPE::LINESTRIPS);
	rb_cCFWClassId.define_value("POLYGONS", COLLADAFW::COLLADA_TYPE::POLYGONS);
	rb_cCFWClassId.define_value("PH", COLLADAFW::COLLADA_TYPE::PH);
	rb_cCFWClassId.define_value("H", COLLADAFW::COLLADA_TYPE::H);
	rb_cCFWClassId.define_value("POLYLIST", COLLADAFW::COLLADA_TYPE::POLYLIST);
	rb_cCFWClassId.define_value("VCOUNT", COLLADAFW::COLLADA_TYPE::VCOUNT);
	rb_cCFWClassId.define_value("TRIANGLES", COLLADAFW::COLLADA_TYPE::TRIANGLES);
	rb_cCFWClassId.define_value("TRIFANS", COLLADAFW::COLLADA_TYPE::TRIFANS);
	rb_cCFWClassId.define_value("TRISTRIPS", COLLADAFW::COLLADA_TYPE::TRISTRIPS);
	rb_cCFWClassId.define_value("VERTICES", COLLADAFW::COLLADA_TYPE::VERTICES);
	rb_cCFWClassId.define_value("LOOKAT", COLLADAFW::COLLADA_TYPE::LOOKAT);
	rb_cCFWClassId.define_value("MATRIX", COLLADAFW::COLLADA_TYPE::MATRIX);
	rb_cCFWClassId.define_value("ROTATE", COLLADAFW::COLLADA_TYPE::ROTATE);
	rb_cCFWClassId.define_value("SCALE", COLLADAFW::COLLADA_TYPE::SCALE);
	rb_cCFWClassId.define_value("SKEW", COLLADAFW::COLLADA_TYPE::SKEW);
	rb_cCFWClassId.define_value("TRANSLATE", COLLADAFW::COLLADA_TYPE::TRANSLATE);
	rb_cCFWClassId.define_value("IMAGE", COLLADAFW::COLLADA_TYPE::IMAGE);
	rb_cCFWClassId.define_value("DATA", COLLADAFW::COLLADA_TYPE::DATA);
	rb_cCFWClassId.define_value("INIT_FROM", COLLADAFW::COLLADA_TYPE::INIT_FROM);
	rb_cCFWClassId.define_value("LIGHT", COLLADAFW::COLLADA_TYPE::LIGHT);
	rb_cCFWClassId.define_value("AMBIENT", COLLADAFW::COLLADA_TYPE::AMBIENT);
	rb_cCFWClassId.define_value("DIRECTIONAL", COLLADAFW::COLLADA_TYPE::DIRECTIONAL);
	rb_cCFWClassId.define_value("POINT", COLLADAFW::COLLADA_TYPE::POINT);
	rb_cCFWClassId.define_value("SPOT", COLLADAFW::COLLADA_TYPE::SPOT);
	rb_cCFWClassId.define_value("MATERIAL", COLLADAFW::COLLADA_TYPE::MATERIAL);
	rb_cCFWClassId.define_value("CAMERA", COLLADAFW::COLLADA_TYPE::CAMERA);
	rb_cCFWClassId.define_value("OPTICS", COLLADAFW::COLLADA_TYPE::OPTICS);
	rb_cCFWClassId.define_value("ORTHOGRAPHIC", COLLADAFW::COLLADA_TYPE::ORTHOGRAPHIC);
	rb_cCFWClassId.define_value("PERSPECTIVE", COLLADAFW::COLLADA_TYPE::PERSPECTIVE);
	rb_cCFWClassId.define_value("IMAGER", COLLADAFW::COLLADA_TYPE::IMAGER);
	rb_cCFWClassId.define_value("ANIMATION", COLLADAFW::COLLADA_TYPE::ANIMATION);
	rb_cCFWClassId.define_value("ANIMATION_CLIP", COLLADAFW::COLLADA_TYPE::ANIMATION_CLIP);
	rb_cCFWClassId.define_value("CHANNEL", COLLADAFW::COLLADA_TYPE::CHANNEL);
	rb_cCFWClassId.define_value("SAMPLER", COLLADAFW::COLLADA_TYPE::SAMPLER);
	rb_cCFWClassId.define_value("CONTROLLER", COLLADAFW::COLLADA_TYPE::CONTROLLER);
	rb_cCFWClassId.define_value("SKIN", COLLADAFW::COLLADA_TYPE::SKIN);
	rb_cCFWClassId.define_value("BIND_SHAPE_MATRIX", COLLADAFW::COLLADA_TYPE::BIND_SHAPE_MATRIX);
	rb_cCFWClassId.define_value("JOINTS", COLLADAFW::COLLADA_TYPE::JOINTS);
	rb_cCFWClassId.define_value("VERTEX_WEIGHTS", COLLADAFW::COLLADA_TYPE::VERTEX_WEIGHTS);
	rb_cCFWClassId.define_value("V", COLLADAFW::COLLADA_TYPE::V);
	rb_cCFWClassId.define_value("MORPH", COLLADAFW::COLLADA_TYPE::MORPH);
	rb_cCFWClassId.define_value("TARGETS", COLLADAFW::COLLADA_TYPE::TARGETS);
	rb_cCFWClassId.define_value("ASSET", COLLADAFW::COLLADA_TYPE::ASSET);
	rb_cCFWClassId.define_value("CONTRIBUTOR", COLLADAFW::COLLADA_TYPE::CONTRIBUTOR);
	rb_cCFWClassId.define_value("AUTHOR", COLLADAFW::COLLADA_TYPE::AUTHOR);
	rb_cCFWClassId.define_value("AUTHORING_TOOL", COLLADAFW::COLLADA_TYPE::AUTHORING_TOOL);
	rb_cCFWClassId.define_value("COMMENTS", COLLADAFW::COLLADA_TYPE::COMMENTS);
	rb_cCFWClassId.define_value("COPYRIGHT", COLLADAFW::COLLADA_TYPE::COPYRIGHT);
	rb_cCFWClassId.define_value("SOURCE_DATA", COLLADAFW::COLLADA_TYPE::SOURCE_DATA);
	rb_cCFWClassId.define_value("CREATED", COLLADAFW::COLLADA_TYPE::CREATED);
	rb_cCFWClassId.define_value("KEYWORDS", COLLADAFW::COLLADA_TYPE::KEYWORDS);
	rb_cCFWClassId.define_value("MODIFIED", COLLADAFW::COLLADA_TYPE::MODIFIED);
	rb_cCFWClassId.define_value("REVISION", COLLADAFW::COLLADA_TYPE::REVISION);
	rb_cCFWClassId.define_value("SUBJECT", COLLADAFW::COLLADA_TYPE::SUBJECT);
	rb_cCFWClassId.define_value("TITLE", COLLADAFW::COLLADA_TYPE::TITLE);
	rb_cCFWClassId.define_value("UNIT", COLLADAFW::COLLADA_TYPE::UNIT);
	rb_cCFWClassId.define_value("UP_AXIS", COLLADAFW::COLLADA_TYPE::UP_AXIS);
	rb_cCFWClassId.define_value("EXTRA", COLLADAFW::COLLADA_TYPE::EXTRA);
	rb_cCFWClassId.define_value("TECHNIQUE", COLLADAFW::COLLADA_TYPE::TECHNIQUE);
	rb_cCFWClassId.define_value("NODE", COLLADAFW::COLLADA_TYPE::NODE);
	rb_cCFWClassId.define_value("VISUAL_SCENE", COLLADAFW::COLLADA_TYPE::VISUAL_SCENE);
	rb_cCFWClassId.define_value("EVALUATE_SCENE", COLLADAFW::COLLADA_TYPE::EVALUATE_SCENE);
	rb_cCFWClassId.define_value("RENDER", COLLADAFW::COLLADA_TYPE::RENDER);
	rb_cCFWClassId.define_value("LAYER", COLLADAFW::COLLADA_TYPE::LAYER);
	rb_cCFWClassId.define_value("BIND_MATERIAL", COLLADAFW::COLLADA_TYPE::BIND_MATERIAL);
	rb_cCFWClassId.define_value("INSTANCE_CAMERA", COLLADAFW::COLLADA_TYPE::INSTANCE_CAMERA);
	rb_cCFWClassId.define_value("INSTANCE_CONTROLLER", COLLADAFW::COLLADA_TYPE::INSTANCE_CONTROLLER);
	rb_cCFWClassId.define_value("SKELETON", COLLADAFW::COLLADA_TYPE::SKELETON);
	rb_cCFWClassId.define_value("INSTANCE_EFFECT", COLLADAFW::COLLADA_TYPE::INSTANCE_EFFECT);
	rb_cCFWClassId.define_value("TECHNIQUE_HINT", COLLADAFW::COLLADA_TYPE::TECHNIQUE_HINT);
	rb_cCFWClassId.define_value("SETPARAM", COLLADAFW::COLLADA_TYPE::SETPARAM);
	rb_cCFWClassId.define_value("INSTANCE_FORCE_FIELD", COLLADAFW::COLLADA_TYPE::INSTANCE_FORCE_FIELD);
	rb_cCFWClassId.define_value("INSTANCE_GEOMETRY", COLLADAFW::COLLADA_TYPE::INSTANCE_GEOMETRY);
	rb_cCFWClassId.define_value("INSTANCE_LIGHT", COLLADAFW::COLLADA_TYPE::INSTANCE_LIGHT);
	rb_cCFWClassId.define_value("INSTANCE_MATERIAL", COLLADAFW::COLLADA_TYPE::INSTANCE_MATERIAL);
	rb_cCFWClassId.define_value("BIND", COLLADAFW::COLLADA_TYPE::BIND);
	rb_cCFWClassId.define_value("BIND_VERTEX_INPUT", COLLADAFW::COLLADA_TYPE::BIND_VERTEX_INPUT);
	rb_cCFWClassId.define_value("INSTANCE_NODE", COLLADAFW::COLLADA_TYPE::INSTANCE_NODE);
	rb_cCFWClassId.define_value("INSTANCE_PHYSICS_MATERIAL", COLLADAFW::COLLADA_TYPE::INSTANCE_PHYSICS_MATERIAL);
	rb_cCFWClassId.define_value("INSTANCE_PHYSICS_MODEL", COLLADAFW::COLLADA_TYPE::INSTANCE_PHYSICS_MODEL);
	rb_cCFWClassId.define_value("INSTANCE_RIGID_BODY", COLLADAFW::COLLADA_TYPE::INSTANCE_RIGID_BODY);
	rb_cCFWClassId.define_value("ANGULAR_VELOCITY", COLLADAFW::COLLADA_TYPE::ANGULAR_VELOCITY);
	rb_cCFWClassId.define_value("VELOCITY", COLLADAFW::COLLADA_TYPE::VELOCITY);
	rb_cCFWClassId.define_value("DYNAMIC", COLLADAFW::COLLADA_TYPE::DYNAMIC);
	rb_cCFWClassId.define_value("MASS_FRAME", COLLADAFW::COLLADA_TYPE::MASS_FRAME);
	rb_cCFWClassId.define_value("SHAPE", COLLADAFW::COLLADA_TYPE::SHAPE);
	rb_cCFWClassId.define_value("HOLLOW", COLLADAFW::COLLADA_TYPE::HOLLOW);
	rb_cCFWClassId.define_value("INSTANCE_RIGID_CONSTRAINT", COLLADAFW::COLLADA_TYPE::INSTANCE_RIGID_CONSTRAINT);
	rb_cCFWClassId.define_value("LIBRARY_ANIMATIONS", COLLADAFW::COLLADA_TYPE::LIBRARY_ANIMATIONS);
	rb_cCFWClassId.define_value("LIBRARY_ANIMATION_CLIPS", COLLADAFW::COLLADA_TYPE::LIBRARY_ANIMATION_CLIPS);
	rb_cCFWClassId.define_value("LIBRARY_CAMERAS", COLLADAFW::COLLADA_TYPE::LIBRARY_CAMERAS);
	rb_cCFWClassId.define_value("LIBRARY_CONTROLLERS", COLLADAFW::COLLADA_TYPE::LIBRARY_CONTROLLERS);
	rb_cCFWClassId.define_value("LIBRARY_GEOMETRIES", COLLADAFW::COLLADA_TYPE::LIBRARY_GEOMETRIES);
	rb_cCFWClassId.define_value("LIBRARY_EFFECTS", COLLADAFW::COLLADA_TYPE::LIBRARY_EFFECTS);
	rb_cCFWClassId.define_value("LIBRARY_FORCE_FIELDS", COLLADAFW::COLLADA_TYPE::LIBRARY_FORCE_FIELDS);
	rb_cCFWClassId.define_value("LIBRARY_IMAGES", COLLADAFW::COLLADA_TYPE::LIBRARY_IMAGES);
	rb_cCFWClassId.define_value("LIBRARY_LIGHTS", COLLADAFW::COLLADA_TYPE::LIBRARY_LIGHTS);
	rb_cCFWClassId.define_value("LIBRARY_MATERIALS", COLLADAFW::COLLADA_TYPE::LIBRARY_MATERIALS);
	rb_cCFWClassId.define_value("LIBRARY_NODES", COLLADAFW::COLLADA_TYPE::LIBRARY_NODES);
	rb_cCFWClassId.define_value("LIBRARY_PHYSICS_MATERIALS", COLLADAFW::COLLADA_TYPE::LIBRARY_PHYSICS_MATERIALS);
	rb_cCFWClassId.define_value("LIBRARY_PHYSICS_MODELS", COLLADAFW::COLLADA_TYPE::LIBRARY_PHYSICS_MODELS);
	rb_cCFWClassId.define_value("LIBRARY_PHYSICS_SCENES", COLLADAFW::COLLADA_TYPE::LIBRARY_PHYSICS_SCENES);
	rb_cCFWClassId.define_value("LIBRARY_VISUAL_SCENES", COLLADAFW::COLLADA_TYPE::LIBRARY_VISUAL_SCENES);
	rb_cCFWClassId.define_value("FX_PROFILE_ABSTRACT", COLLADAFW::COLLADA_TYPE::FX_PROFILE_ABSTRACT);
	rb_cCFWClassId.define_value("EFFECT", COLLADAFW::COLLADA_TYPE::EFFECT);
	rb_cCFWClassId.define_value("GL_HOOK_ABSTRACT", COLLADAFW::COLLADA_TYPE::GL_HOOK_ABSTRACT);
	rb_cCFWClassId.define_value("PROFILE_GLSL", COLLADAFW::COLLADA_TYPE::PROFILE_GLSL);
	rb_cCFWClassId.define_value("PASS", COLLADAFW::COLLADA_TYPE::PASS);
	rb_cCFWClassId.define_value("DRAW", COLLADAFW::COLLADA_TYPE::DRAW);
	rb_cCFWClassId.define_value("SHADER", COLLADAFW::COLLADA_TYPE::SHADER);
	rb_cCFWClassId.define_value("COMPILER_TARGET", COLLADAFW::COLLADA_TYPE::COMPILER_TARGET);
	rb_cCFWClassId.define_value("COMPILER_OPTIONS", COLLADAFW::COLLADA_TYPE::COMPILER_OPTIONS);
	rb_cCFWClassId.define_value("PROFILE_COMMON", COLLADAFW::COLLADA_TYPE::PROFILE_COMMON);
	rb_cCFWClassId.define_value("CONSTANT", COLLADAFW::COLLADA_TYPE::CONSTANT);
	rb_cCFWClassId.define_value("LAMBERT", COLLADAFW::COLLADA_TYPE::LAMBERT);
	rb_cCFWClassId.define_value("PHONG", COLLADAFW::COLLADA_TYPE::PHONG);
	rb_cCFWClassId.define_value("BLINN", COLLADAFW::COLLADA_TYPE::BLINN);
	rb_cCFWClassId.define_value("PROFILE_CG", COLLADAFW::COLLADA_TYPE::PROFILE_CG);
	rb_cCFWClassId.define_value("PROFILE_GLES", COLLADAFW::COLLADA_TYPE::PROFILE_GLES);
	rb_cCFWClassId.define_value("COLOR_TARGET", COLLADAFW::COLLADA_TYPE::COLOR_TARGET);
	rb_cCFWClassId.define_value("DEPTH_TARGET", COLLADAFW::COLLADA_TYPE::DEPTH_TARGET);
	rb_cCFWClassId.define_value("STENCIL_TARGET", COLLADAFW::COLLADA_TYPE::STENCIL_TARGET);
	rb_cCFWClassId.define_value("COLOR_CLEAR", COLLADAFW::COLLADA_TYPE::COLOR_CLEAR);
	rb_cCFWClassId.define_value("DEPTH_CLEAR", COLLADAFW::COLLADA_TYPE::DEPTH_CLEAR);
	rb_cCFWClassId.define_value("STENCIL_CLEAR", COLLADAFW::COLLADA_TYPE::STENCIL_CLEAR);
	rb_cCFWClassId.define_value("BOX", COLLADAFW::COLLADA_TYPE::BOX);
	rb_cCFWClassId.define_value("HALF_EXTENTS", COLLADAFW::COLLADA_TYPE::HALF_EXTENTS);
	rb_cCFWClassId.define_value("PLANE", COLLADAFW::COLLADA_TYPE::PLANE);
	rb_cCFWClassId.define_value("EQUATION", COLLADAFW::COLLADA_TYPE::EQUATION);
	rb_cCFWClassId.define_value("SPHERE", COLLADAFW::COLLADA_TYPE::SPHERE);
	rb_cCFWClassId.define_value("RADIUS", COLLADAFW::COLLADA_TYPE::RADIUS);
	rb_cCFWClassId.define_value("ELLIPSOID", COLLADAFW::COLLADA_TYPE::ELLIPSOID);
	rb_cCFWClassId.define_value("CYLINDER", COLLADAFW::COLLADA_TYPE::CYLINDER);
	rb_cCFWClassId.define_value("HEIGHT", COLLADAFW::COLLADA_TYPE::HEIGHT);
	rb_cCFWClassId.define_value("TAPERED_CYLINDER", COLLADAFW::COLLADA_TYPE::TAPERED_CYLINDER);
	rb_cCFWClassId.define_value("RADIUS1", COLLADAFW::COLLADA_TYPE::RADIUS1);
	rb_cCFWClassId.define_value("RADIUS2", COLLADAFW::COLLADA_TYPE::RADIUS2);
	rb_cCFWClassId.define_value("CAPSULE", COLLADAFW::COLLADA_TYPE::CAPSULE);
	rb_cCFWClassId.define_value("TAPERED_CAPSULE", COLLADAFW::COLLADA_TYPE::TAPERED_CAPSULE);
	rb_cCFWClassId.define_value("CONVEX_MESH", COLLADAFW::COLLADA_TYPE::CONVEX_MESH);
	rb_cCFWClassId.define_value("FORCE_FIELD", COLLADAFW::COLLADA_TYPE::FORCE_FIELD);
	rb_cCFWClassId.define_value("PHYSICS_MATERIAL", COLLADAFW::COLLADA_TYPE::PHYSICS_MATERIAL);
	rb_cCFWClassId.define_value("PHYSICS_SCENE", COLLADAFW::COLLADA_TYPE::PHYSICS_SCENE);
	rb_cCFWClassId.define_value("RIGID_BODY", COLLADAFW::COLLADA_TYPE::RIGID_BODY);
	rb_cCFWClassId.define_value("RIGID_CONSTRAINT", COLLADAFW::COLLADA_TYPE::RIGID_CONSTRAINT);
	rb_cCFWClassId.define_value("REF_ATTACHMENT", COLLADAFW::COLLADA_TYPE::REF_ATTACHMENT);
	rb_cCFWClassId.define_value("ATTACHMENT", COLLADAFW::COLLADA_TYPE::ATTACHMENT);
	rb_cCFWClassId.define_value("ENABLED", COLLADAFW::COLLADA_TYPE::ENABLED);
	rb_cCFWClassId.define_value("INTERPENETRATE", COLLADAFW::COLLADA_TYPE::INTERPENETRATE);
	rb_cCFWClassId.define_value("LIMITS", COLLADAFW::COLLADA_TYPE::LIMITS);
	rb_cCFWClassId.define_value("SWING_CONE_AND_TWIST", COLLADAFW::COLLADA_TYPE::SWING_CONE_AND_TWIST);
	rb_cCFWClassId.define_value("LINEAR", COLLADAFW::COLLADA_TYPE::LINEAR);
	rb_cCFWClassId.define_value("SPRING", COLLADAFW::COLLADA_TYPE::SPRING);
	rb_cCFWClassId.define_value("ANGULAR", COLLADAFW::COLLADA_TYPE::ANGULAR);
	rb_cCFWClassId.define_value("PHYSICS_MODEL", COLLADAFW::COLLADA_TYPE::PHYSICS_MODEL);
	rb_cCFWClassId.define_value("PRIMITIVE_ELEMENT", COLLADAFW::COLLADA_TYPE::PRIMITIVE_ELEMENT);
	rb_cCFWClassId.define_value("INSTANCE_VISUAL_SCENE", COLLADAFW::COLLADA_TYPE::INSTANCE_VISUAL_SCENE);
	rb_cCFWClassId.define_value("INSTANCE_SCENE_GRAPH", COLLADAFW::COLLADA_TYPE::INSTANCE_SCENE_GRAPH);
	rb_cCFWClassId.define_value("ANIMATIONLIST", COLLADAFW::COLLADA_TYPE::ANIMATIONLIST);
	rb_cCFWClassId.define_value("SKIN_DATA", COLLADAFW::COLLADA_TYPE::SKIN_DATA);
	rb_cCFWClassId.define_value("FORMULA", COLLADAFW::COLLADA_TYPE::FORMULA);
	rb_cCFWClassId.define_value("FORMULAS", COLLADAFW::COLLADA_TYPE::FORMULAS);
	rb_cCFWClassId.define_value("JOINT", COLLADAFW::COLLADA_TYPE::JOINT);
	rb_cCFWClassId.define_value("JOINTPRIMITIVE", COLLADAFW::COLLADA_TYPE::JOINTPRIMITIVE);
	rb_cCFWClassId.define_value("KINEMATICS_MODEL", COLLADAFW::COLLADA_TYPE::KINEMATICS_MODEL);
	rb_cCFWClassId.define_value("KINEMATICS_CONTROLLER", COLLADAFW::COLLADA_TYPE::KINEMATICS_CONTROLLER);
	rb_cCFWClassId.define_value("INSTANCE_KINEMATICS_SCENE", COLLADAFW::COLLADA_TYPE::INSTANCE_KINEMATICS_SCENE);

}

void rb_define_CFWTypes()
{
	rb_define_CFWTypesArrays();
	rb_define_CFWTypesEnums();
}
